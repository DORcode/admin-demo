server:
  port: 8081


# 配置真实数据源
spring:
  shardingsphere:
    datasource:
      # 配置第一个数据源
      ds0:
        driver-class-name: com.mysql.cj.jdbc.Driver
        type: com.zaxxer.hikari.HikariDataSource
        jdbc-url: jdbc:mysql://localhost:3306/ds0?serverTimezone=Asia/Shanghai&useUnicode=true&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false
        username: root
        password: 123456
        # 配置第二个数据源
      ds1:
        driver-class-name: com.mysql.cj.jdbc.Driver
        type: com.zaxxer.hikari.HikariDataSource
        jdbc-url: jdbc:mysql://localhost:3306/ds1?serverTimezone=Asia/Shanghai&useUnicode=true&zeroDateTimeBehavior=CONVERT_TO_NULL&useSSL=false
        username: root
        password: 123456
        # 配置真实数据源
      names: ds0,ds1
    rules:
      sharding:
        default-database-strategy:
          inline:
            sharding-column: user_id
            algorithm-expression: ds$->{user_id % 2}
        binding-tables[0]: t_order, t_order_item
        broadcast-tables[0]: t_dict
        default-data-source-name: ds0
        # 配置分片算法
        sharding-algorithms:
          # 分库算法
          database_inline:
            props:
              algorithm-expression: ds_${user_id % 2}
            type: INLINE
          # 分表算法
          table_inline:
            props:
              algorithm-expression: t_order_${order_id % 2}
            type: INLINE
          table_order_item_inline:
            props:
              algorithm-expression: t_order_item_${order_id % 2}
            type: INLINE
        tables:
          # 配置表规则
          t_order:
            actual-data-nodes: ds$->{0..1}.t_order$->{0..1}
            # 配置分库策略
#            database-strategy:
#              standard:
#                sharding-algorithm-name: database_inline
#                sharding-column: user_id
            # 配置分表策略
            table-strategy:
              standard:
                sharding-algorithm-name: table_inline
                sharding-column: order_id
            key-generator:
              column: order_id
              type: SNOWFLAKE
              props:
                work:
                  id: 123
          t_order_item:
            actual-data-nodes: ds$->{0..1}.t_order_item$->{0..1}
              # 配置分库策略
#            database-strategy:
#              standard:
#                sharding-algorithm-name: database_inline
#                sharding-column: user_id
            # 配置分表策略
            table-strategy:
              standard:
                sharding-algorithm-name: table_order_item_inline
                sharding-column: order_id
            key-generator:
              column: order_item_id
              type: SNOWFLAKE
              props:
                work:
                  id: 123
    props:
      sql:
        show: true


  profiles:
    active: dev

mybatis-plus:
  mapper-locations: classpath:mapper/*.xml
  global-config:
    db-config:
      id-type: auto
      field-strategy: not_empty
      #驼峰下划线转换
      column-underline: true
      #逻辑删除配置
      logic-delete-value: 1
      logic-not-delete-value: 0
      db-type: mysql
    refresh: false
  configuration:
    map-underscore-to-camel-case: true
    cache-enabled: false

logging:
  config: classpath:logback-spring.xml
  file:
    path: /logs/sphere