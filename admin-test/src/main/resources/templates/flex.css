:root {
    box-sizing: border-box;
}

*,
::before,
::after {
    box-sizing: inherit;
}

body {
    background-color: #709b90;
    font-family: Helvetica, Arial, sans-serif;
}

body *+* {
    /*用猫头鹰选择器设置全局外边距*/
    margin-top: 1.5em;
}

.container {
    max-width: 1080px;
    margin: 0 auto;
}


/*弹性容器应该是无序列表（<ul>）。它的子元素，即列表项（<li>）就是弹性子元素*/

.nav {
    background-color: #5f4b44;
    display: -webkit-flex;
    /*在Safari8中，层叠值应该写成-webkit-flex*/
    display: flex;
    padding: .3em;
    list-style-type: none;
    border-radius: .2em;
}


/*直接后代组合器（>）确保了只会选中直接子元素*/

.nav>li {
    margin-top: 0;
}

.nav>li+li {
    margin-left: 1.5em;
    /*选中所有前面有列表项的列表项，即除第一项外的所有列表项*/
}

.nav>.nav-right {
    margin-left: auto;
    /*Flexbox还允许将最后的菜单项移动到右侧。加上外边距后，菜单就完成了*/
}

.nav>li>a {
    display: block;
    background-color: #cc6b5a;
    color: white;
    text-decoration: none;
    padding: .5em 1em;
    font-size: calc(0.5em + 1vw);
}

[class*="column-"] {
    /*属性选择器，根据元素的class属性匹配元素*/
    float: left;
    margin-top: 0;
    padding: 0 0.75em;
}

.tile {
    background-color: white;
    padding: 1.5em;
}

.flex {
    display: flex;
    /*将主容器设置为flexbox*/
}

.flex>*+* {
    margin-top: 0;
    margin-left: 1.5em;
    /*给每个弹性子元素之间加上间隔*/
}

.column-main {
    /* width: 70%; */
    flex: 66.67%;
    background-color: white;
}

.column-sider {
    flex: 33.33%;
    /* width: 30%; */
    margin-right: -0.75em;
}

.login-form h3 {
    margin: 0;
    font-size: .9em;
    font-weight: bold;
    text-align: right;
    text-transform: uppercase;
}

.login-form input:not([type=checkbox]):not([type=radio]) {
    display: block;
    /*display: block，让它们单独占据一行*/
    width: 100%;
    margin-top: 0;
}

.login-form button {
    margin-top: 1em;
    border: 1px solid #cc6b5a;
    background-color: white;
    padding: .5em 1em;
    cursor: pointer;
}

.flex::after {
    /*清除浮动规则，让行元素包含内部的浮云列*/
    display: block;
    content: " ";
    clear: both;
}

.centered {
    text-align: center;
}

.cost {
    display: flex;
    justify-content: center;
    align-items: center;
    line-height: .7;
    /*让弹性子元素在主轴和副轴方向上均居中*/
}


/*span默认就是行内元素*/

.cost>span {
    margin-top: 0;
}

.cost-currency {
    font-size: 2rem;
}

.cost-dollars {
    font-size: 4rem;
}

.cost-cents {
    font-size: 1.5rem;
    align-self: flex-start;
}

.cta-button {
    display: block;
    background-color: #cc6b5a;
    color: white;
    padding: .5em 1em;
    text-decoration: none;
}


/*
❑ 使用Flexbox实现灵活易操作的网页内容布局。
❑ Autoprefixer可以简化Flexbox对旧版浏览器的支持。
❑ 使用flex指定任何能想到的弹性子元素大小的组合。
❑ 使用嵌套的弹性盒子来组成复杂的布局，以及填满自适应大小的盒子的高度。
❑ Flexbox自动地创建等高的列。
❑ 使用align-items和align-self让一个弹性子元素在弹性容器中垂直居中。

Flexbugs github
*/